/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Tabelas.PericiasClasse;
import java.awt.Checkbox;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JPanel;
import tabelas.Pericias;

/**
 *
 * @author Jefferson
 */
public class JFPericiasClasse extends javax.swing.JFrame {

    List<PericiasClasse> listaPc = new ArrayList<>();
    Container form = this.getContentPane();

    /**
     * Creates new form JFPericiasClasse
     */
    public JFPericiasClasse() {
        centralizarComponente();
        initComponents();
    }

    public JFPericiasClasse(List<Object> l) {
        centralizarComponente();
        initComponents();
        GridLayout layout = new GridLayout(10, 5, 10, 10);
        this.setLayout(layout);
        // adiciona todas as pericias cadastradas no banco para um frame pericias
        // todos como checkbox para permitir ao mestre selecionar as pericias de classe
        for (Object p : l) {
            Pericias p1 = (Pericias) p;

            Checkbox cbx = new Checkbox(p1.getNome_pericia());
            cbx.setName(String.valueOf(p1.getCodigo_pericia()));

            this.add(cbx);
        }
        // crio o botão em tempo de execução pois se deixar já no formulário
        // quando transformar em grid e adicionar os checkbox o botão será o
        // primeiro do grid e ficará todo desconfigurado
        JButton jbtSalvar = new JButton("Salvar");
        jbtSalvar.addActionListener(new salvarPC());
        this.add(jbtSalvar);
        this.pack();
    }
    
    public void centralizarComponente() {

        Dimension ds = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension dw = getSize();
        setLocation((ds.width - dw.width) / 2, (ds.height - dw.height) / 2);
    }

    public class salvarPC implements ActionListener {

        public void actionPerformed(ActionEvent e) {

            for (Component comp : form.getComponents()) {

                if ("class java.awt.Checkbox".equals(comp.getClass().toString())) {

                    Checkbox cbx = (Checkbox) comp;

                    if (cbx.getState()) {

                        System.out.println("Classe: " + cbx.getClass());
                        System.out.println("Nome : " + cbx.getName());
                        System.out.println("Texto: " + cbx.getLabel());
                        PericiasClasse pc = new PericiasClasse();
                        pc.setCodigo_pericia(Integer.valueOf(cbx.getName()));
                        listaPc.add(pc);
                    }
                }
            }
        }
    }

    public List getPericiasClasse() {
        return listaPc;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFPericiasClasse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFPericiasClasse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFPericiasClasse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFPericiasClasse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFPericiasClasse().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
